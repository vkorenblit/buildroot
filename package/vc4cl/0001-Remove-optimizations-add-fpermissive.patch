From a73969f67c2076b1f2e517be33d4c02b6d18ed30 Mon Sep 17 00:00:00 2001
From: Valentin Korenblit <valentin.korenblit@smile.fr>
Date: Tue, 17 Apr 2018 14:17:26 +0200
Subject: [PATCH] Remove optimizations, add -fpermissive

---
 CMakeLists.txt | 31 +------------------------------
 1 file changed, 1 insertion(+), 30 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 0b2dd18..9b8cf56 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -18,25 +18,6 @@ option(CROSS_COMPILE "Cross compile for Raspbian" OFF)
 # Option whether to create deb package
 option(BUILD_DEB_PACKAGE "Enables creating .deb package" ON)
 
-if(CROSS_COMPILE)
-        set (CMAKE_LIBRARY_ARCHITECTURE "arm-linux-gnueabihf")
-	if(NOT CROSS_COMPILER_PATH)
-		set(CROSS_COMPILER_PATH "/usr/bin")
-	endif()
-	#Set Cross compiler
-	SET(CMAKE_SYSTEM_NAME 		"Linux")
-	SET(CMAKE_C_COMPILER   		"${CROSS_COMPILER_PATH}/arm-linux-gnueabihf-gcc")
-	SET(CMAKE_CXX_COMPILER 		"${CROSS_COMPILER_PATH}/arm-linux-gnueabihf-g++")
-	SET(CMAKE_FIND_ROOT_PATH  	"${CROSS_COMPILER_PATH}/../../")
-	SET(CMAKE_AR                    "${CROSS_COMPILER_PATH}/arm-linux-gnueabihf-ar")
-	SET(CMAKE_CXX_COMPILER_AR       "${CROSS_COMPILER_PATH}/arm-linux-gnueabihf-gcc-ar")
-	SET(CMAKE_CXX_COMPILER_RANLIB   "${CROSS_COMPILER_PATH}/arm-linux-gnueabihf-ranlib")
-	SET(CMAKE_C_COMPILER_AR         "${CROSS_COMPILER_PATH}/arm-linux-gnueabihf-gcc-ar")
-	SET(CMAKE_CXX_COMPILER_RANLIB   "${CROSS_COMPILER_PATH}/arm-linux-gnueabihf-ranlib")
-	SET(CMAKE_LINKER                "${CROSS_COMPILER_PATH}/arm-linux-gnueabihf-ld")
-	message(STATUS "Cross compiling for Raspbian with compiler: ${CMAKE_CXX_COMPILER}")
-endif()
-
 # Set C++ standard to C++14 without any extensions (e.g. GNU)
 set(CMAKE_CXX_STANDARD 14)
 set(CMAKE_CXX_STANDARD_REQUIRED ON)
@@ -45,21 +26,11 @@ set(CMAKE_CXX_EXTENSIONS OFF)
 project (VC4CL VERSION 0.4)
 add_definitions(-DVC4CL_LIBRARY_VERSION="${PROJECT_VERSION}")
 
-# append usage of C++ to compiler flags, also optimize for speed and enable all warnings
-if(BUILD_DEBUG)
-	LIST(APPEND CMAKE_CXX_FLAGS " -g3 -Wall -Wextra -Wold-style-cast -Wno-unused-parameter -Wno-ignored-attributes -fno-strict-aliasing -pthread")
-	SET(CMAKE_BUILD_TYPE 		Debug)
-	add_definitions(-DDEBUG_MODE=1)
-else()
-	LIST(APPEND CMAKE_CXX_FLAGS " -g3 -Wall -Wextra -Wold-style-cast -Wno-unused-parameter -Wno-ignored-attributes -fno-strict-aliasing -pthread")
-	SET(CMAKE_BUILD_TYPE 		Release)
-endif()
-
 # Enable additional warnings, if available
 if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
 	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Weverything -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-shadow -Wno-padded -Wno-shadow-field-in-constructor -Wno-global-constructors -Wno-exit-time-destructors -Wno-missing-prototypes -Wno-gnu-anonymous-struct -Wno-nested-anon-types -Wno-documentation -Wno-unused-command-line-argument -Wno-unused-member-function -Wno-gnu-zero-variadic-macro-arguments -Wno-covered-switch-default -Wno-switch-enum -Wswitch")
 elseif("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER "6.0.0")
-	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wdouble-promotion -fdelete-null-pointer-checks -Wnull-dereference -Wuninitialized -Wsuggest-attribute=pure -Wsuggest-attribute=const -Wsuggest-attribute=format -Wsuggest-override -Wconversion -Wzero-as-null-pointer-constant")
+	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fpermissive -Wdouble-promotion -fdelete-null-pointer-checks -Wnull-dereference -Wuninitialized -Wsuggest-attribute=pure -Wsuggest-attribute=const -Wsuggest-attribute=format -Wsuggest-override -Wconversion -Wzero-as-null-pointer-constant")
 endif()
 
 ####
-- 
2.14.3

